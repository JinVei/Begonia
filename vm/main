	.section	__TEXT,__text,regular,pure_instructions
	.macosx_version_min 10, 14
                                        ## Start of file scope inline assembly
.format:
	.ascii	"%d, hello world %s\n"
	.byte	0
	.globl	print
print:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdx
	movl	-4(%rbp), %eax
	movl	%eax, %esi
	leaq	.format(%rip), %rdi
	movl	$0, %eax
	callq	_printf
	movq	%rbp, %rsp
	popq	%rbp
	retq

                                        ## End of file scope inline assembly
	.globl	_main                   ## -- Begin function main
	.p2align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## %bb.0:                               ## %start
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	_.str(%rip), %rsi
	movl	$10, %edi
	callq	_print
	xorl	%eax, %eax
	popq	%rcx
	retq
	.cfi_endproc
                                        ## -- End function
	.section	__DATA,__data
	.globl	_.str                   ## @.str
_.str:
	.asciz	", how are you?\n"


.subsections_via_symbols
